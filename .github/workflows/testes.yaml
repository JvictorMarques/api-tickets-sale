name: Pipeline de Testes Unitários, Integração e Cobertura de Código
on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/testes.yaml
      - app/src/**
env:
  JAVA_VERSION: 25
  JAVA_DISTRIBUTION: 'zulu'
  TARGET: target-artifact

jobs:
  unit-test:
    name: Executando testes unitários com JUnit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Configuração do JDK
        uses: actions/setup-java@v5
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
          cache-dependency-path: ./app/pom.xml

      - name: Executar testes unitários e gerar cobertura
        working-directory: ./app
        run: mvn test jacoco:report -Dgroups=unit
      - name: Upload da pasta target (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.TARGET }}
          path: ./app/target

  integration-test:
    name: Executando testes de integração com JUnit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v5

      - name: Configuração do JDK
        uses: actions/setup-java@v5
        with:
          distribution: ${{ env.JAVA_DISTRIBUTION }}
          java-version: ${{ env.JAVA_VERSION }}
          cache: maven
          cache-dependency-path: ./app/pom.xml

      - name: Executar testes de integração
        working-directory: ./app
        env:
          MERCADOPAGO_ACCESS_TOKEN: ${{ secrets.MERCADOPAGO_ACCESS_TOKEN }}
          MERCADOPAGO_NOTIFICATION_URL: ${{ secrets.MERCADOPAGO_NOTIFICATION_URL }}
        run: mvn test -Dgroups=integration

  sonarqube:
    name: Executando análise de código com SonarQube
    needs: [unit-test, integration-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout do código
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Configuração do JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: ${{ env.JAVA_DISTRIBUTION }}

      - name: Cache de pacotes SonarQube
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache de pacotes Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Download da pasta target (artifact)
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.TARGET }}
          path: ./app/target

      - name: Análise de qualidade e cobertura no SonarCloud
        working-directory: ./app
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

        run: |
          mvn -B sonar:sonar \
            -Dsonar.projectKey=JvictorMarques_api-tickets-sale \
            -Dsonar.organization=jvictormarques \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml \
            -Dsonar.java.binaries=target/classes

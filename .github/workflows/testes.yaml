name: Pipeline de Testes Unitários, Integração e Cobertura de Código
on:
  pull_request:
    branches:
      - main
    paths:
      - .github/workflows/testes.yaml
      - app/src/**
env:
  COVERAGE: coverage
jobs:
  unit-test:
    name: Executando testes unitários com JUnit
    runs-on: ubuntu-latest
    steps:
      - name: Verificando o código
        uses: actions/checkout@v5

      - name: Configurando o JDK
        uses: actions/setup-java@v5
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Baixar as dependências do Maven
        working-directory: ./app
        run: mvn dependency:go-offline

      - name: Gerar relatório de cobertura de código
        working-directory: ./app
        run: mvn test jacoco:report -Dgroups=unit

      - name: Adicionar relatório de cobertura como artefato
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COVERAGE }}
          path: ./app/target/site/jacoco/jacoco.xml
  # integration-test:
  #   name: Executando testes de integração com JUnit
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Verificando o código
  #       uses: actions/checkout@v4

  #     - name: Configurando o JDK
  #       uses: actions/setup-java@v4
  #       with:
  #         distribution: 'zulu'
  #         java-version: '17'

  #     - name: Baixar as dependências do Maven
  #       working-directory: ./app
  #       run: mvn dependency:go-offline

  #     - name: Executar testes de integração
  #       working-directory: ./app
  #       run: mvn test -Dgroups=integration
  sonarqube:
    name: Executando análise de código com SonarQube
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Baixar artefato de cobertura
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.COVERAGE }}
          path: app/target/site/jacoco
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'
      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Construindo e analisando o projeto
        working-directory: ./app
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=JvictorMarques_api-tickets-sale
